{"version":3,"sources":["components/pages/main-page.js","contexts/layout-store.js","contexts/make-store.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","reducer","initialState","dispatchContext","createContext","storeContext","children","useReducer","Provider","useContext","makeStore","state","action","type","animatedArr","data","LayoutProvider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAMeA,EAJE,WACf,OAAO,+C,cCDT,IAcA,ECde,SAAmBC,EAASC,GACzC,IAAMC,EAAkBC,0BAClBC,EAAeD,0BAerB,MAAO,CAbe,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACvB,EAA0BC,qBAAWN,EAASC,GAA9C,6BAEA,OACE,cAACC,EAAgBK,SAAjB,UACE,cAACH,EAAaG,SAAd,UAAwBF,OAKV,kBAAMG,qBAAWN,IACpB,kBAAMM,qBAAWJ,KDDmBK,EAZvC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,2BACFF,GADL,IAEEG,YAAaF,EAAOG,OAExB,QACE,OAAOJ,KAVQ,IAcrB,mBAAOK,EAAP,eELeC,MARf,WACE,OACE,eAACD,EAAD,WACE,cAAC,EAAD,IADF,QCOWE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.461df87b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MainPage = () => {\n  return <div>Hello World</div>;\n};\n\nexport default MainPage;\n","import makeStore from \"./make-store\";\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      return {\n        ...state,\n        animatedArr: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst [LayoutProvider, useLayout, useLayoutDispatch] = makeStore(reducer, initialState);\nexport { LayoutProvider, useLayout, useLayoutDispatch };\n","import { createContext, useContext, useReducer } from \"react\";\n\nexport default function makeStore(reducer, initialState) {\n  const dispatchContext = createContext();\n  const storeContext = createContext();\n\n  const StoreProvider = ({ children }) => {\n    const [store, dispatch] = useReducer(reducer, initialState);\n\n    return (\n      <dispatchContext.Provider>\n        <storeContext.Provider>{children}</storeContext.Provider>\n      </dispatchContext.Provider>\n    );\n  };\n\n  const useDispatch = () => useContext(dispatchContext);\n  const useStore = () => useContext(storeContext);\n\n  return [StoreProvider, useDispatch, useStore];\n}\n","import MainPage from \"./components/pages/main-page\";\nimport { LayoutProvider } from \"./contexts/layout-store\";\n\nfunction App() {\n  return (\n    <LayoutProvider>\n      <MainPage></MainPage>;\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}