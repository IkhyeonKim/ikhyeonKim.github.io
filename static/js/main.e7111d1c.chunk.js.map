{"version":3,"sources":["styles/ball-collision-bouce-style.js","components/pages/ball-page.js","contexts/layout-store.js","contexts/make-store.js","styles/global-style.js","App.js","reportWebVitals.js","index.js"],"names":["BallBounceStyle","styled","div","BallPage","props","rest","canvasRef","useRef","useState","setCtx","window","innerWidth","canvasWidth","setCanvasWidth","innerHeight","canvasHeight","setCanvasHeight","bounceWindow","useCallback","x","y","speed","radius","vx","vy","newX","newY","_vx","_vy","drawBall","ctx","frameCount","clearRect","canvas","width","height","fillStyle","beginPath","arc","Math","PI","fill","useEffect","handleResize","document","body","clientWidth","clientHeight","addEventListener","removeEventListener","current","getContext","context","console","log","animationFrameId","random","render","newXY","requestAnimationFrame","cancelAnimationFrame","ref","reducer","initialState","dispatchContext","createContext","storeContext","children","useReducer","store","dispatch","Provider","value","useContext","makeStore","state","action","type","animatedArr","data","LayoutProvider","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7111d1c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst BallBounceStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #161e38;\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default BallBounceStyle;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport BallBounceStyle from \"../../styles/ball-collision-bouce-style\";\n\nclass Ball {\n  constructor(stageWidth, stageHeight, speed, radius) {\n    this.radius = radius;\n    this.vx = speed;\n    this.vy = speed;\n\n    const diameter = radius * 2;\n    this.x = diameter + (Math.random() * stageWidth - diameter);\n    this.y = diameter + (Math.random() * stageHeight - diameter);\n  }\n\n  draw(ctx, stageWidth, stageHeight) {\n    this.x += this.vx;\n    this.y += this.vy;\n\n    ctx.fillStyle = \"fdd700\";\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n}\n\nconst BallPage = (props) => {\n  const { ...rest } = props;\n\n  const canvasRef = useRef();\n  const requestRef = useRef();\n  const [ctx, setCtx] = useState();\n\n  const [canvasWidth, setCanvasWidth] = useState(window.innerWidth);\n  const [canvasHeight, setCanvasHeight] = useState(window.innerHeight);\n\n  const animate = (time) => {\n    // The 'state' will always be the initial value here\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const bounceWindow = useCallback((canvasWidth, canvasHeight, x, y, speed, radius, vx, vy) => {\n    const minX = radius;\n    const minY = radius;\n    const maxX = canvasWidth - radius;\n    const maxY = canvasHeight - radius;\n\n    let newX = x;\n    let newY = y;\n    let _vx = vx;\n    let _vy = vy;\n\n    if (x <= minX || x >= maxX) {\n      _vx *= -1;\n      newX += _vx;\n    } else if (y <= minY || y >= maxY) {\n      _vy *= -1;\n      newY += _vy;\n    } else {\n      newX += _vx;\n      newY += _vy;\n    }\n\n    return { x: newX, y: newY, vx: _vx, vy: _vy };\n  }, []);\n\n  const drawBall = useCallback((ctx, frameCount, x, y, radius) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // console.log({ ctx, frameCount, x, y, radius });\n\n    ctx.fillStyle = \"#fdd700\";\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI); // x,y,radius\n    // ctx.arc(x, y, radius * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI); // x,y,radius\n    ctx.fill();\n  }, []);\n\n  //   useEffect(() => {\n  //     requestRef.current = requestAnimationFrame(animate);\n  //     return () => cancelAnimationFrame(requestRef.current);\n  //   }, []); // Make sure the effect runs only once\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasWidth(document.body.clientWidth);\n      setCanvasHeight(document.body.clientHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    setCtx(canvasRef.current.getContext(\"2d\"));\n    const context = canvasRef.current.getContext(\"2d\");\n\n    console.log(canvasRef.current.width);\n    let speed = 5;\n    const radius = 50;\n\n    const diameter = radius * 2;\n\n    let x = radius + Math.random() * (canvasRef.current.width - diameter);\n    let y = radius + Math.random() * (canvasRef.current.height - diameter);\n    let vx = speed;\n    let vy = speed;\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    //Our draw came here\n    const render = () => {\n      frameCount++;\n\n      const newXY = bounceWindow(canvasRef.current.width, canvasRef.current.height, x, y, speed, radius, vx, vy);\n      x = newXY.x;\n      y = newXY.y;\n      vx = newXY.vx;\n      vy = newXY.vy;\n      //   speed = newXY.speed;\n\n      drawBall(context, frameCount, x, y, radius);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [bounceWindow, drawBall]);\n\n  return (\n    <BallBounceStyle>\n      <canvas width={canvasWidth} height={canvasHeight} ref={canvasRef} {...rest}></canvas>\n    </BallBounceStyle>\n  );\n};\n\nexport default BallPage;\n","import makeStore from \"./make-store\";\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      return {\n        ...state,\n        animatedArr: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst [LayoutProvider, useLayout, useLayoutDispatch] = makeStore(reducer, initialState);\nexport { LayoutProvider, useLayout, useLayoutDispatch };\n","import { createContext, useContext, useReducer } from \"react\";\n\nexport default function makeStore(reducer, initialState) {\n  const dispatchContext = createContext();\n  const storeContext = createContext();\n\n  const StoreProvider = ({ children }) => {\n    const [store, dispatch] = useReducer(reducer, initialState);\n\n    return (\n      <dispatchContext.Provider value={dispatch}>\n        <storeContext.Provider value={store}>{children}</storeContext.Provider>\n      </dispatchContext.Provider>\n    );\n  };\n\n  const useDispatch = () => useContext(dispatchContext);\n  const useStore = () => useContext(storeContext);\n\n  return [StoreProvider, useDispatch, useStore];\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n    }\n\n    html {\n        width: 100%;\n        height: 100%;\n    }\n\n    div#root {\n        height: 100%;\n    }\n\n    body {\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyle;\n","import BallPage from \"./components/pages/ball-page\";\nimport MainPage from \"./components/pages/main-page\";\nimport { LayoutProvider } from \"./contexts/layout-store\";\nimport GlobalStyle from \"./styles/global-style\";\n\nfunction App() {\n  return (\n    <LayoutProvider>\n      <GlobalStyle />\n      <BallPage></BallPage>\n      {/* <MainPage></MainPage> */}\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}