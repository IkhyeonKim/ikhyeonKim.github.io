{"version":3,"sources":["styles/ball-collision-bouce-style.js","components/pages/ball-page.js","contexts/layout-store.js","contexts/make-store.js","styles/global-style.js","App.js","reportWebVitals.js","index.js"],"names":["BallBounceStyle","styled","div","radius","BallPage","props","rest","canvasRef","useRef","useState","setCtx","window","innerWidth","canvasWidth","setCanvasWidth","innerHeight","canvasHeight","setCanvasHeight","bounceWindow","useCallback","x","y","speed","vx","vy","newX","newY","_vx","_vy","bounceBlock","block","circleX","circleY","width","height","minX","minY","maxX","maxY","x1","Math","abs","x2","y1","y2","min1","min","min2","drawBall","ctx","frameCount","fillStyle","beginPath","arc","PI","fill","drawBlock","rect","moveTo","lineTo","useEffect","handleResize","document","body","clientWidth","clientHeight","addEventListener","removeEventListener","current","getContext","context","console","log","animationFrameId","random","render","clearRect","newXY","bouncedXY","requestAnimationFrame","cancelAnimationFrame","ref","reducer","initialState","dispatchContext","createContext","storeContext","children","useReducer","store","dispatch","Provider","value","useContext","makeStore","state","action","type","animatedArr","data","LayoutProvider","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19f71dc6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst BallBounceStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #161e38;\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default BallBounceStyle;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport BallBounceStyle from \"../../styles/ball-collision-bouce-style\";\n\nclass Ball {\n  constructor(stageWidth, stageHeight, speed, radius) {\n    this.radius = radius;\n    this.vx = speed;\n    this.vy = speed;\n\n    const diameter = radius * 2;\n    this.x = diameter + (Math.random() * stageWidth - diameter);\n    this.y = diameter + (Math.random() * stageHeight - diameter);\n  }\n\n  draw(ctx, stageWidth, stageHeight) {\n    this.x += this.vx;\n    this.y += this.vy;\n\n    ctx.fillStyle = \"fdd700\";\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n}\n\nconst radius = 50;\n\nconst BallPage = (props) => {\n  const { ...rest } = props;\n\n  const canvasRef = useRef();\n  const requestRef = useRef();\n  const [ctx, setCtx] = useState();\n\n  const [canvasWidth, setCanvasWidth] = useState(window.innerWidth);\n  const [canvasHeight, setCanvasHeight] = useState(window.innerHeight);\n\n  const animate = (time) => {\n    // The 'state' will always be the initial value here\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const bounceWindow = useCallback((canvasWidth, canvasHeight, x, y, speed, radius, vx, vy) => {\n    const minX = radius;\n    const minY = radius;\n    const maxX = canvasWidth - radius;\n    const maxY = canvasHeight - radius;\n\n    let newX = x;\n    let newY = y;\n    let _vx = vx;\n    let _vy = vy;\n\n    if (x <= minX || x >= maxX) {\n      _vx *= -1;\n      newX += _vx;\n    } else if (y <= minY || y >= maxY) {\n      _vy *= -1;\n      newY += _vy;\n    } else {\n      newX += _vx;\n      newY += _vy;\n    }\n\n    return { x: newX, y: newY, vx: _vx, vy: _vy };\n  }, []);\n\n  const bounceBlock = useCallback((block, circleX, circleY, vx, vy) => {\n    const { width, height, x, y } = block;\n    const minX = x - radius;\n    const minY = y - radius;\n    const maxX = x + width + radius;\n    const maxY = y + height + radius;\n\n    let newX = circleX;\n    let newY = circleY;\n    let _vx = vx;\n    let _vy = vy;\n\n    if (circleX > minX && circleX < maxX && circleY > minY && circleY < maxY) {\n      const x1 = Math.abs(minX - circleX);\n      const x2 = Math.abs(circleX - maxX);\n      const y1 = Math.abs(minY - circleY);\n      const y2 = Math.abs(circleY - maxY);\n\n      const min1 = Math.min(x1, x2);\n      const min2 = Math.min(y1, y2);\n      const min = Math.min(min1, min2);\n\n      if (min === min1) {\n        // 엑스 축으로 튕기는가\n        _vx *= -1;\n        newX += _vx;\n      } else if (min === min2) {\n        // y축으로 튕기는가\n        _vy *= -1;\n        newY += _vy;\n      }\n    }\n    return { x: newX, y: newY, vx: _vx, vy: _vy };\n  }, []);\n\n  const drawBall = useCallback((ctx, frameCount, x, y, radius) => {\n    // console.log({ ctx, frameCount, x, y, radius });\n\n    ctx.fillStyle = \"#fdd700\";\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI); // x,y,radius\n    // ctx.arc(x, y, radius * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI); // x,y,radius\n    ctx.fill();\n  }, []);\n\n  const drawBlock = useCallback((ctx, width, height, x, y) => {\n    const xGap = 70;\n    const yGap = 70;\n\n    const maxX = width + x;\n    const maxY = height + y;\n\n    ctx.fillStyle = \"#ff384e\";\n    ctx.beginPath();\n    ctx.rect(x, y, width, height);\n    ctx.fill();\n\n    // bottom shadow\n    ctx.fillStyle = \"#190f3a\";\n    ctx.beginPath();\n    ctx.moveTo(maxX, maxY);\n    ctx.lineTo(maxX - xGap, maxY + yGap);\n    ctx.lineTo(x - xGap, maxY + yGap);\n    ctx.lineTo(x, maxY);\n    ctx.fill();\n\n    // side shadow\n    ctx.fillStyle = \"#9d0919\";\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x, maxY);\n    ctx.lineTo(x - xGap, maxY + yGap);\n    ctx.lineTo(x - xGap, maxY + yGap - height);\n    ctx.fill();\n  }, []);\n\n  //   useEffect(() => {\n  //     requestRef.current = requestAnimationFrame(animate);\n  //     return () => cancelAnimationFrame(requestRef.current);\n  //   }, []); // Make sure the effect runs only once\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasWidth(document.body.clientWidth);\n      setCanvasHeight(document.body.clientHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    setCtx(canvasRef.current.getContext(\"2d\"));\n    const context = canvasRef.current.getContext(\"2d\");\n\n    console.log(canvasRef.current.width);\n    let speed = 10;\n\n    const diameter = radius * 2;\n\n    let x = radius + Math.random() * (canvasRef.current.width - diameter);\n    let y = radius + Math.random() * (canvasRef.current.height - diameter);\n    let vx = speed;\n    let vy = speed;\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      const newXY = bounceWindow(canvasRef.current.width, canvasRef.current.height, x, y, speed, radius, vx, vy);\n      x = newXY.x;\n      y = newXY.y;\n      vx = newXY.vx;\n      vy = newXY.vy;\n      //   speed = newXY.speed;\n\n      drawBlock(context, 600, 20, 170, 230);\n      drawBall(context, frameCount, x, y, radius);\n\n      const bouncedXY = bounceBlock({ width: 600, height: 20, x: 170, y: 230 }, x, y, vx, vy);\n      x = bouncedXY.x;\n      y = bouncedXY.y;\n      vx = bouncedXY.vx;\n      vy = bouncedXY.vy;\n\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [bounceWindow, bounceBlock, drawBall, drawBlock]);\n\n  return (\n    <BallBounceStyle>\n      <canvas width={canvasWidth} height={canvasHeight} ref={canvasRef} {...rest}></canvas>\n    </BallBounceStyle>\n  );\n};\n\nexport default BallPage;\n","import makeStore from \"./make-store\";\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      return {\n        ...state,\n        animatedArr: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst [LayoutProvider, useLayout, useLayoutDispatch] = makeStore(reducer, initialState);\nexport { LayoutProvider, useLayout, useLayoutDispatch };\n","import { createContext, useContext, useReducer } from \"react\";\n\nexport default function makeStore(reducer, initialState) {\n  const dispatchContext = createContext();\n  const storeContext = createContext();\n\n  const StoreProvider = ({ children }) => {\n    const [store, dispatch] = useReducer(reducer, initialState);\n\n    return (\n      <dispatchContext.Provider value={dispatch}>\n        <storeContext.Provider value={store}>{children}</storeContext.Provider>\n      </dispatchContext.Provider>\n    );\n  };\n\n  const useDispatch = () => useContext(dispatchContext);\n  const useStore = () => useContext(storeContext);\n\n  return [StoreProvider, useDispatch, useStore];\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n    }\n\n    html {\n        width: 100%;\n        height: 100%;\n    }\n\n    div#root {\n        height: 100%;\n    }\n\n    body {\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyle;\n","import BallPage from \"./components/pages/ball-page\";\nimport MainPage from \"./components/pages/main-page\";\nimport { LayoutProvider } from \"./contexts/layout-store\";\nimport GlobalStyle from \"./styles/global-style\";\n\nfunction App() {\n  return (\n    <LayoutProvider>\n      <GlobalStyle />\n      <BallPage></BallPage>\n      {/* <MainPage></MainPage> */}\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}