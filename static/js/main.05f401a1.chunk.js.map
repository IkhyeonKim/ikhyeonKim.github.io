{"version":3,"sources":["styles/ball-collision-bouce-style.js","components/pages/ball-page.js","contexts/layout-store.js","contexts/make-store.js","styles/global-style.js","App.js","reportWebVitals.js","index.js"],"names":["BallBounceStyle","styled","div","BallPage","canvasRef","useRef","useState","setCtx","window","innerWidth","canvasWidth","setCanvasWidth","innerHeight","canvasHeight","setCanvasHeight","useEffect","handleResize","document","body","clientWidth","clientHeight","addEventListener","removeEventListener","current","getContext","animationFrameId","context","render","ctx","fillStyle","beginPath","arc","Math","PI","fill","draw","requestAnimationFrame","cancelAnimationFrame","width","height","ref","reducer","initialState","dispatchContext","createContext","storeContext","children","useReducer","Provider","useContext","makeStore","state","action","type","animatedArr","data","LayoutProvider","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"uNAYeA,EAVSC,IAAOC,IAAV,iJ,OCsFNC,EA/DE,WACf,IAAMC,EAAYC,mBAElB,GADmBA,mBACGC,sBAAtB,mBAAYC,GAAZ,WAEA,EAAsCD,mBAASE,OAAOC,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCL,mBAASE,OAAOI,aAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAkDA,OA/BAC,qBAAU,WACR,IAAMC,EAAe,WACnBL,EAAeM,SAASC,KAAKC,aAC7BL,EAAgBG,SAASC,KAAKE,eAKhC,OAFAZ,OAAOa,iBAAiB,SAAUL,GAE3B,kBAAMR,OAAOc,oBAAoB,SAAUN,MACjD,IAEHD,qBAAU,WACRR,EAAOH,EAAUmB,QAAQC,WAAW,OACpC,IAGIC,EAHEC,EAAUtB,EAAUmB,QAAQC,WAAW,MAa7C,OAPe,SAATG,KA/BK,SAACC,GACZA,EAAIC,UAAY,OAChBD,EAAIE,YACJF,EAAIG,IAAI,GAAI,IAAK,GAAI,EAAG,EAAIC,KAAKC,IACjCL,EAAIM,QA6BFC,CAAKT,GACLD,EAAmBjB,OAAO4B,sBAAsBT,GAElDA,GAEO,WACLnB,OAAO6B,qBAAqBZ,MAE7B,IAGD,cAAC,EAAD,UACE,wBAAQa,MAAO5B,EAAa6B,OAAQ1B,EAAc2B,IAAKpC,O,OCjF7D,I,EAcA,ECde,SAAmBqC,EAASC,GACzC,IAAMC,EAAkBC,0BAClBC,EAAeD,0BAerB,MAAO,CAbe,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACvB,EAA0BC,qBAAWN,EAASC,GAA9C,6BAEA,OACE,cAACC,EAAgBK,SAAjB,UACE,cAACH,EAAaG,SAAd,UAAwBF,OAKV,kBAAMG,qBAAWN,IACpB,kBAAMM,qBAAWJ,KDDmBK,EAZvC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,2BACFF,GADL,IAEEG,YAAaF,EAAOG,OAExB,QACE,OAAOJ,KAVQ,IAcrB,mBAAOK,EAAP,KEQeC,GFRf,UEdoBC,YAAH,+RCaFC,MAVf,WACE,OACE,eAACH,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS1C,OACP,cAAC,IAAM2C,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASsD,eAAe,SAM1BX,M","file":"static/js/main.05f401a1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst BallBounceStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #161e38;\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default BallBounceStyle;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BallBounceStyle from \"../../styles/ball-collision-bouce-style\";\n\nclass Ball {\n  constructor(stageWidth, stageHeight, speed, radius) {\n    this.radius = radius;\n    this.vx = speed;\n    this.vy = speed;\n\n    const diameter = radius * 2;\n    this.x = diameter + (Math.random() * stageWidth - diameter);\n    this.y = diameter + (Math.random() * stageHeight - diameter);\n  }\n\n  draw(ctx, stageWidth, stageHeight) {\n    this.x += this.vx;\n    this.y += this.vy;\n\n    ctx.fillStyle = \"fdd700\";\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n}\n\nconst BallPage = () => {\n  const canvasRef = useRef();\n  const requestRef = useRef();\n  const [ctx, setCtx] = useState();\n\n  const [canvasWidth, setCanvasWidth] = useState(window.innerWidth);\n  const [canvasHeight, setCanvasHeight] = useState(window.innerHeight);\n\n  const animate = (time) => {\n    // The 'state' will always be the initial value here\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const draw = (ctx) => {\n    ctx.fillStyle = \"#000\";\n    ctx.beginPath();\n    ctx.arc(50, 100, 20, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  //   useEffect(() => {\n  //     requestRef.current = requestAnimationFrame(animate);\n  //     return () => cancelAnimationFrame(requestRef.current);\n  //   }, []); // Make sure the effect runs only once\n\n  useEffect(() => {\n    const handleResize = () => {\n      setCanvasWidth(document.body.clientWidth);\n      setCanvasHeight(document.body.clientHeight);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    setCtx(canvasRef.current.getContext(\"2d\"));\n    const context = canvasRef.current.getContext(\"2d\");\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    //Our draw came here\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <BallBounceStyle>\n      <canvas width={canvasWidth} height={canvasHeight} ref={canvasRef}></canvas>\n    </BallBounceStyle>\n  );\n};\n\nexport default BallPage;\n","import makeStore from \"./make-store\";\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      return {\n        ...state,\n        animatedArr: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst [LayoutProvider, useLayout, useLayoutDispatch] = makeStore(reducer, initialState);\nexport { LayoutProvider, useLayout, useLayoutDispatch };\n","import { createContext, useContext, useReducer } from \"react\";\n\nexport default function makeStore(reducer, initialState) {\n  const dispatchContext = createContext();\n  const storeContext = createContext();\n\n  const StoreProvider = ({ children }) => {\n    const [store, dispatch] = useReducer(reducer, initialState);\n\n    return (\n      <dispatchContext.Provider>\n        <storeContext.Provider>{children}</storeContext.Provider>\n      </dispatchContext.Provider>\n    );\n  };\n\n  const useDispatch = () => useContext(dispatchContext);\n  const useStore = () => useContext(storeContext);\n\n  return [StoreProvider, useDispatch, useStore];\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n    }\n\n    html {\n        width: 100%;\n        height: 100%;\n    }\n\n    div#root {\n        height: 100%;\n    }\n\n    body {\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyle;\n","import BallPage from \"./components/pages/ball-page\";\nimport MainPage from \"./components/pages/main-page\";\nimport { LayoutProvider } from \"./contexts/layout-store\";\nimport GlobalStyle from \"./styles/global-style\";\n\nfunction App() {\n  return (\n    <LayoutProvider>\n      <GlobalStyle />\n      <BallPage></BallPage>\n      {/* <MainPage></MainPage> */}\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}